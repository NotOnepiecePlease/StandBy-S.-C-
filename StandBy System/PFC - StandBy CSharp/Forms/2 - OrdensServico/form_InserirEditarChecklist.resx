<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuSeparator1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAYkAAAAOCAYAAADaH+BpAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAPGSURBVHhe7ZWNb41nHIa7YEy6pcwIsrERlbEhSNkQmrIh
        ND6GjAxDECxIu6gGaWdbiY+sZMQWH0FKmZhM0572nNNz2vPROaGhgmzLWJARH2FhGYu67qR/xJbcd3Ll
        d7Xnfc7zvu/ze56T5jiO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4zj/szQ3N79QXl7eKhwOt06l
        Um2amppexNvF4/GX+Ls9nl5fX/9yMpl8Bc+oq6vrwGcdGxoaXo1Go6/FYrHOiUSiSyQS6RoIBLrV1NR0
        r6ysfL26uvqNYDDYgzE98bfwXnhvvA+eiffl2rfxfnj/2trad/AB+EB8UCgUGowPwYfiWfgwfDjzvIeP
        wEfio/DR+Bg8G8/Bx+Lj4AN8PExg/ETmmsT3T8Zz8Sn4VHwaY6bjM/CZ+Cz8Y3w2Pgf/BJ+Lz4P5+ALq
        QliEL6YugaX4MupyWMF8n1FXwip8NTUP8vHPqWugAF8Lhfg66nrGb2CuImoxfMH/N8KX+NfUEtjEdZup
        W2Arvg22499QS2EH7IRvYRfshj3wHXwPe2Ef7Oe9HKAehEP4YWoZHMGPUo/BcfwHOIGfpP7IPKfgJzgN
        FVAJVRDgmmpqEEI4JRyBKF5HjUEcT0AS/5l6BlL4Weo5aMTPUy9AE1yES3AZrsAv8Cv8Br/DVbgGf8B1
        uMH4m/An3ILbcAfuwj0+v099AA/xv6iP4DH+N/UfeII/hX+hmb+ftfhTfaZrcF37GB7h+o6H8ADXd98D
        zaU5NbfuQfdyk89vgO5R96p71r3rGfQseiY9m55Rz6pn1rPrHVxgvN5JI5zD9a5ScAbXO0xCAo9DDNe7
        jkIEp4RDEMS1NgHQWmnNtHZaQ63lKa0t12iNT2jN8eNwDFcvHIEyXD1yCA7i6p39oF5ST6m31GPqNfWc
        ek89qF5UT5Yyj3p0O2zDt8IWXL28CUrU4/AVvlG9D8V4EddsgPW49kghrMULYA2uvZQPebj22CpYiWvv
        rYDlfI/25FJYgmuvLoKF+AL22qf4PHyu9jg+B5+tvY/PwmfiM+AjfBp1qs4MPJc5JsMk3sVE6gQYz5gP
        +XscPhbPwbPxMfhofBQ+Eh/B+Pfx4fgwPAsfig/BB+OD8IHMNYC53sX74/10RuJ98UydnXhvvJfO1Kqq
        qjfxHjprdeZybXfO6m7M2VVnss5mndGM6aQzW2c3nqGzXGc6nq4zXmc93q6ioqKtfgPw1vpN0G9Dy8+E
        4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4zjOfy5pac8BfWg0crbQu1gAAAAASUVORK5CYII=
</value>
  </data>
</root>